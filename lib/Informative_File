// For Initial Location
static const CameraPosition initialCameraPosition = CameraPosition(
    target: LatLng(33.72993324248651, 73.03831168800549),
    zoom: 17,
  );

<- In Widget code is: GoogleMap(initialCameraPosition: initialCameraPosition)



--------------------------------------------------------------------------------------
// For Markers Code
List<Marker> _marker = [];
  List<Marker> _list = const [
    Marker(markerId: MarkerId('1'),
    position: LatLng(33.72993324248651, 73.03831168800549),
    infoWindow: InfoWindow(
      title: "Faisal Masque"
    ))

<- In Widget code is: GoogleMap( marker : Set<Marker>.of(_marker)



--------------------------------------------------------------------------------------
// Change value to name or name to value on the address
Future<void> getAddressFromCoordinates(double lat, double lon) async {
      List<Placemark> placemarks = await placemarkFromCoordinates(lat, lon);
      Placemark place = placemarks[0];
      setState(() {
        addressResult =
        '${place.street}, ${place.locality}, ${place.postalCode}, ${place.country}';
      });
      print(addressResult.toString());
  }

 < - In Widget code is:
 ElevatedButton(
         onPressed: (){
         getAddressFromCoordinates(33.7294, 73.0379);
         },
         child: Center(child: Text("Click"))
 )


 --------------------------------------------------------------------------------------
 // Get Current Location from User
Future<Position?> getCurrentLocation() async {
    await Geolocator.requestPermission().then((value) {}).onError((
      error,
      stackTrace,
    ) {
      print("error" + error.toString());
    });

    return await Geolocator.getCurrentPosition();
  }

< - In Widget code is:
floatingActionButton: FloatingActionButton(
        onPressed: () async {
          getCurrentLocation().then((value) async {
            print(value!.latitude.toString() + " " + value.latitude.toString());
            _marker.add(
              Marker(
                markerId: MarkerId('2'),
                position: LatLng(value.latitude, value.altitude),
                infoWindow: InfoWindow(
                  title: "My Current Location"
                )
              )
            );
            CameraPosition cameraPosition = CameraPosition(target: LatLng(value.latitude, value.altitude), zoom: 14);

            final GoogleMapController controller = await _controller.future;

            controller.animateCamera(CameraUpdate.newCameraPosition(cameraPosition));
            setState(() {

            });
          });
        },
        child: Icon(Icons.location_on),
      )